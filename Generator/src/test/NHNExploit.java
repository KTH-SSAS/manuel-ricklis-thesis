package test;

import core.AttackStep;
import java.lang.Override;
import java.lang.String;
import java.util.HashSet;
import java.util.Set;

public class NHNExploit extends AutomaticExploit {
  public NHNExploit(String name) {
    super(name);
    assetClassName = "NHNExploit";
    AttackStep.allAttackSteps.remove(impact);
    impact = new Impact(name);
  }

  public NHNExploit() {
    this("Anonymous");
  }

  public class Impact extends Exploit.Impact {
    private Set<AttackStep> _cacheChildrenImpact;

    public Impact(String name) {
      super(name);
    }

    @Override
    public void updateChildren(Set<AttackStep> attackSteps) {
      if (_cacheChildrenImpact == null) {
        _cacheChildrenImpact = new HashSet<>();
        if (NHNExploit.this instanceof NHNExploit) {
          for (var _0 : ((test.NHNExploit) NHNExploit.this)._allVulnerableSoftwareAutomaticExploit()) {
            _cacheChildrenImpact.add(_0.modify);
          }
        }
      }
      for (AttackStep attackStep : _cacheChildrenImpact) {
        attackStep.updateTtc(this, ttc, attackSteps);
      }
    }

    @Override
    public double localTtc() {
      return ttcHashMap.get("NHNExploit.impact");
    }
  }
}
